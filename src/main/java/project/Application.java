package project;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.event.ChangeEvent;
import static project.ball.Ball.BLUE_BALL_IMAGE;
import static project.ball.Ball.RED_BALL_IMAGE;
import project.ball.BallAudioUtil;
import project.ball.BallSize;
import project.ball.BallSpeed;
import project.panel.BoardPanel;

public class Application extends javax.swing.JFrame {

    public static final BufferedImage IMAGE = getImage();

    private static BufferedImage getImage() {
        try {
            return ImageIO.read(Application.class.getClassLoader().getResource("image/billiard2000x1000.png"));
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    public Application() {
        initComponents();
        initBallLabelIcons();
        boardPanel.init(this);

        initVolume();
        initAdditionalTFs();
        initAdditionalButtons();
        initStartStopButtonAction();
    }

    private void initBallLabelIcons() {
        initBallLabelIcon(RED_BALL_IMAGE, redBallInHoleLabel);
        initBallLabelIcon(BLUE_BALL_IMAGE, blueBallInHoleLabel);
    }

    private void initBallLabelIcon(BufferedImage image, JLabel ballLabel) {
        Image scaled = image.getScaledInstance(ballLabel.getWidth(), ballLabel.getHeight(), Image.SCALE_SMOOTH);
        ballLabel.setIcon(new ImageIcon(scaled));
    }

    private void initVolume() {
        BallAudioUtil.clipVolume = getCorrectVolume();

        volumeSlider.addChangeListener((ChangeEvent e) -> {
            BallAudioUtil.clipVolume = getCorrectVolume();
        });
    }

    private float getCorrectVolume() {
        return (float) volumeSlider.getValue() / 10;
    }

    private void initAdditionalTFs() {
        setAdditionalTFsEnabled(false);
    }

    private void setAdditionalTFsEnabled(boolean enabled) {
        additionalRedBallsTF.setEnabled(enabled);
        additionalBlueBallsTF.setEnabled(enabled);
    }

    private void initAdditionalButtons() {
        setAdditionalButtonsEnabled(false);
    }

    private void setAdditionalButtonsEnabled(boolean enabled) {
        additionalRedBallsButton.setEnabled(enabled);
        additionalBlueBallsButton.setEnabled(enabled);
    }

    private void initStartStopButtonAction() {
        startStopTB.addItemListener(e -> {
            if (startStopTB.isSelected()) {
                setChangedModeValues("Stop", true);
                boardPanel.start(isSelectedRandomMode(), getSelectedBallSize(),
                        getSelectedBallSpeed(), isSelectedInitialBlueBallWaitsRedBall());
            } else {
                setChangedModeValues("Start", false);
                boardPanel.stop();
            }
        });
    }

    private void setChangedModeValues(String startStopText, boolean startStopSelected) {
        startStopTB.setText(startStopText);
        randomModeCB.setEnabled(!startStopSelected);
        initialBlueBallWaitsRedBallCB.setEnabled(!startStopSelected);
        setAdditionalTFsEnabled(startStopSelected);
        setAdditionalButtonsEnabled(startStopSelected);

        redBallInHoleTF.setText("0");
        blueBallInHoleTF.setText("0");
    }

    public void incrementRedBallInHole() {
        incrementBallInHole(redBallInHoleTF);
    }

    public void incrementBlueBallInHole() {
        incrementBallInHole(blueBallInHoleTF);
    }

    public synchronized void incrementBallInHole(JTextField ballTextField) {
        int count = Integer.parseInt(ballTextField.getText());
        ballTextField.setText(String.valueOf(++count));
    }

    public BoardPanel getBoardPanel() {
        return boardPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boardPanel = new project.panel.BoardPanel();
        redBallInHoleLabel = new javax.swing.JLabel();
        redBallInHoleTF = new javax.swing.JTextField();
        blueBallInHoleLabel = new javax.swing.JLabel();
        blueBallInHoleTF = new javax.swing.JTextField();
        additionalBlueBallsLabel = new javax.swing.JLabel();
        additionalBlueBallsTF = new project.common.DigitOnlyTextField();
        additionalBlueBallsButton = new javax.swing.JButton();
        randomModeCB = new javax.swing.JCheckBox();
        ballSizeCB = new javax.swing.JComboBox<>(BallSize.values());
        ballSpeedCB = new javax.swing.JComboBox<>(BallSpeed.values());
        ballSizeLabel = new javax.swing.JLabel();
        ballSpeedLabel = new javax.swing.JLabel();
        startStopTB = new javax.swing.JToggleButton();
        additionalRedBallsLabel = new javax.swing.JLabel();
        additionalRedBallsTF = new project.common.DigitOnlyTextField();
        additionalRedBallsButton = new javax.swing.JButton();
        initialBlueBallWaitsRedBallCB = new javax.swing.JCheckBox();
        volumeSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Billiard balls simulation");
        setResizable(false);

        javax.swing.GroupLayout boardPanelLayout = new javax.swing.GroupLayout(boardPanel);
        boardPanel.setLayout(boardPanelLayout);
        boardPanelLayout.setHorizontalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );
        boardPanelLayout.setVerticalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        redBallInHoleLabel.setToolTipText("");

        redBallInHoleTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        redBallInHoleTF.setText("0");
        redBallInHoleTF.setFocusable(false);
        redBallInHoleTF.setRequestFocusEnabled(false);

        blueBallInHoleLabel.setToolTipText("");

        blueBallInHoleTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        blueBallInHoleTF.setText("0");
        blueBallInHoleTF.setFocusable(false);
        blueBallInHoleTF.setRequestFocusEnabled(false);

        additionalBlueBallsLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        additionalBlueBallsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        additionalBlueBallsLabel.setText("Additional blue balls");

        additionalBlueBallsTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        additionalBlueBallsTF.setText("0");

        additionalBlueBallsButton.setText("ADD");
        additionalBlueBallsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additionalBlueBallsButtonActionPerformed(evt);
            }
        });

        randomModeCB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        randomModeCB.setText("Random");

        ballSizeLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ballSizeLabel.setText("Ball size");

        ballSpeedLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ballSpeedLabel.setText("Ball speed");

        startStopTB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        startStopTB.setText("Start");
        startStopTB.setPreferredSize(new java.awt.Dimension(72, 27));
        startStopTB.setRolloverEnabled(false);

        additionalRedBallsLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        additionalRedBallsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        additionalRedBallsLabel.setText("Additional red balls");

        additionalRedBallsTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        additionalRedBallsTF.setText("0");

        additionalRedBallsButton.setText("ADD");
        additionalRedBallsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additionalRedBallsButtonActionPerformed(evt);
            }
        });

        initialBlueBallWaitsRedBallCB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        initialBlueBallWaitsRedBallCB.setText("Blue ball waits red ball");

        volumeSlider.setMaximum(10);
        volumeSlider.setValue(5);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Volume");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(additionalBlueBallsTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(additionalBlueBallsLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(additionalRedBallsButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(additionalRedBallsTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(additionalRedBallsLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(initialBlueBallWaitsRedBallCB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ballSpeedLabel)
                                    .addComponent(ballSizeLabel)
                                    .addComponent(randomModeCB))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(startStopTB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ballSizeCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ballSpeedCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(additionalBlueBallsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(volumeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(redBallInHoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(redBallInHoleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(blueBallInHoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(blueBallInHoleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ballSizeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ballSizeLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ballSpeedCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ballSpeedLabel))
                        .addGap(18, 18, 18)
                        .addComponent(initialBlueBallWaitsRedBallCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(randomModeCB)
                            .addComponent(startStopTB, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(volumeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(additionalRedBallsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(additionalRedBallsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(additionalRedBallsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(additionalBlueBallsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(additionalBlueBallsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(additionalBlueBallsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(redBallInHoleTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(blueBallInHoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(redBallInHoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(blueBallInHoleTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void additionalRedBallsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additionalRedBallsButtonActionPerformed
        boardPanel.addAdditionalRedBalls(Integer.parseInt(additionalRedBallsTF.getText()),
                getSelectedBallSize(), getSelectedBallSpeed());
    }//GEN-LAST:event_additionalRedBallsButtonActionPerformed

    private void additionalBlueBallsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additionalBlueBallsButtonActionPerformed
        boardPanel.addAdditionalBlueBalls(Integer.parseInt(additionalBlueBallsTF.getText()),
                getSelectedBallSize(), getSelectedBallSpeed());
    }//GEN-LAST:event_additionalBlueBallsButtonActionPerformed

    private boolean isSelectedRandomMode() {
        return randomModeCB.isSelected();
    }

    private BallSize getSelectedBallSize() {
        return (BallSize) ballSizeCB.getSelectedItem();
    }

    private BallSpeed getSelectedBallSpeed() {
        return (BallSpeed) ballSpeedCB.getSelectedItem();
    }

    private boolean isSelectedInitialBlueBallWaitsRedBall() {
        return initialBlueBallWaitsRedBallCB.isSelected();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Application().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton additionalBlueBallsButton;
    private javax.swing.JLabel additionalBlueBallsLabel;
    private project.common.DigitOnlyTextField additionalBlueBallsTF;
    private javax.swing.JButton additionalRedBallsButton;
    private javax.swing.JLabel additionalRedBallsLabel;
    private project.common.DigitOnlyTextField additionalRedBallsTF;
    private javax.swing.JComboBox<BallSize> ballSizeCB;
    private javax.swing.JLabel ballSizeLabel;
    private javax.swing.JComboBox<BallSpeed> ballSpeedCB;
    private javax.swing.JLabel ballSpeedLabel;
    private javax.swing.JLabel blueBallInHoleLabel;
    private javax.swing.JTextField blueBallInHoleTF;
    private project.panel.BoardPanel boardPanel;
    private javax.swing.JCheckBox initialBlueBallWaitsRedBallCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JCheckBox randomModeCB;
    private javax.swing.JLabel redBallInHoleLabel;
    private javax.swing.JTextField redBallInHoleTF;
    private javax.swing.JToggleButton startStopTB;
    private javax.swing.JSlider volumeSlider;
    // End of variables declaration//GEN-END:variables
}
